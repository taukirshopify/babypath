<link rel="stylesheet" href="{{ 'component-card.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'section-product-recommendations.css' | asset_url }}" media="print" onload="this.media='all'">

<noscript>{{ 'component-card.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'component-price.css' | asset_url | stylesheet_tag }}</noscript>
<noscript>{{ 'section-product-recommendations.css' | asset_url | stylesheet_tag }}</noscript>

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} gradient">
  <div class="container">
    <div class="row">
  <product-recommendations class="product-recommendations page-width section-{{ section.id }}-padding isolate" data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=10">
    <div class=" splide" id="image-carousel">
    {% if recommendations.performed and recommendations.products_count > 0 %}
      <h2 class="product-recommendations__heading {{ section.settings.heading_size }}">{{ section.settings.heading | escape }}</h2>
      <div class="grid product-grid{% if section.settings.columns_desktop == 1 %} grid--full-width{% else %} grid--{{ section.settings.columns_desktop }}-col-desktop{% endif %} grid--{{ section.settings.columns_mobile }}-col-tablet-down" role="list">
      <div class="splide__track">
      <ul class="splide__list">
        {% for recommendation in recommendations.products %}
          <li class=" splide__slide">
            {% render 'homepagegrid',
              product: recommendation, %}
            {% comment %} <div class="product_item">






              <a class="product-items" href="{{ recommendation.url }}">
                <div class="product_image_wrapper ">
                 <img
                   class="product-item-img firstImage"
                   src="{{ recommendation.featured_image | img_url: 'master' }}"
                   alt="{{ recommendation.title }}">

                 {% if recommendation.images[1] %}
                   <img
                     class="product-item-img secondImage"
                     src="{{ recommendation.images[1] | product_img_url: 'master' }}"
                     alt="{{ recommendation.title }}">
         
                 {% endif %}

                 {% if recommendation.compare_at_price > recommendation.price %}
                   <div class="proudct-sale">
                     On sale
                   </div>
                 {% endif %}
               </div>
               </a>
            
             <div class="product-item-p-text">
         
         
         
              
           
               {% if recommendation.available %}
                 <form
                   method="post"
                   action="/cart/add"
                   class="add_to_cart_form" onclick="asyncCall(this)">
                   <input
                     type="hidden"
                     name="id"
                     value="{{ recommendation.first_available_variant.id }}" />
                   <input
                     type="submit"
                     class="addcart__buttonwrap theme-btn shape-btn bg-black"
                     data-id="{{ recommendation.first_available_variant.id }}"
                     value="Add to cart" />
                 </form>
         
               {% else %}
               <a href="#" class="sold-item-cart">sold out</a>
               {% endif %}
               <p class="product-item-text">{{ recommendation.title }}</p>
               <p class="product-item-text product_price">
                 {% if recommendation.compare_at_price > recommendation.price %}
                   <span class="sale-price">{{ recommendation.price | money }}</span>
                   <span class="regular-price compare_at_price">
                     <del>{{ recommendation.compare_at_price | money }}</del>
                   </span>
                 {% else %}
                   <span class="regular-price">{{ recommendation.price | money }}</span>
                 {% endif %}
               </p>
             </div>



       
             </div> {% endcomment %}
          </li>
        {% endfor %}
      </ul>
    </div>
      </div>
      <div class="splide__arrows splide__arrows--ltr">
        <button
          class="splide__arrow splide__arrow--prev"
          type="button"
          aria-label="Previous slide"
          aria-controls="splide01-track"
        >
          <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="40" height="40" viewBox="0 0 32 32">
            <title>gallery-next15x</title>
            <path fill="none" stroke="#000" stroke-width="1.8" stroke-miterlimit="4" stroke-linecap="butt" stroke-linejoin="miter" d="M9.75 4.010l12.51 12.51-12.48 12.47"></path>
            </svg>
        </button>
        <button
          class="splide__arrow splide__arrow--next"
          type="button"
          aria-label="Next slide"
          aria-controls="splide01-track"
        >
          <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="40" height="40" viewBox="0 0 32 32">
            <title>gallery-next15x</title>
            <path fill="none" stroke="#000" stroke-width="1.8" stroke-miterlimit="4" stroke-linecap="butt" stroke-linejoin="miter" d="M9.75 4.010l12.51 12.51-12.48 12.47"></path>
            </svg>
        </button>
      </div>
    {% endif %}
    <div>
  </product-recommendations>
</div>
</div>
</div>

{% javascript %}
  class ProductRecommendations extends HTMLElement {
    constructor() {
      super();

      const handleIntersection = (entries, observer) => {
        if (!entries[0].isIntersecting) return;
        observer.unobserve(this);

        fetch(this.dataset.url)
          .then(response => response.text())
          .then(text => {
            const html = document.createElement('div');
            html.innerHTML = text;
            const recommendations = html.querySelector('product-recommendations');

            if (recommendations && recommendations.innerHTML.trim().length) {
              this.innerHTML = recommendations.innerHTML;
            }

            if (html.querySelector('.grid__item')) {
              this.classList.add('product-recommendations--loaded');
            }
            let splide = new Splide( '#image-carousel', {
              pagination : false,
              paginationKeyboard:false,
              type   : 'loop',
              drag   : 'free',
              perPage: 4,
              perMove: 3,
              rewindSpeed: 100,
              
              rewindByDrag:true,
              breakpoints: {
                  1020: {
                      perPage: 3,
                      perMove: 2,
                  },
                  640: {
                      perPage: 2,
                      perMove: 1,
                  }
                }
            } );
            
            splide.mount(); 

          })
          .catch(e => {
            console.error(e);
          });
      }

      new IntersectionObserver(handleIntersection.bind(this), {rootMargin: '0px 0px 200px 0px'}).observe(this);
    }
  }

  customElements.define('product-recommendations', ProductRecommendations);
{% endjavascript %}

{% schema %}
{
  "name": "t:sections.product-recommendations.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.product-recommendations.settings.paragraph__1.content"
    },
    {
      "type": "text",
      "id": "heading",
      "default": "You may also like",
      "label": "t:sections.product-recommendations.settings.heading.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 4,
      "step": 1,
      "default": 4,
      "label": "t:sections.product-recommendations.settings.columns_desktop.label"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "accent-1",
          "label": "t:sections.all.colors.accent_1.label"
        },
        {
          "value": "accent-2",
          "label": "t:sections.all.colors.accent_2.label"
        },
        {
          "value": "background-1",
          "label": "t:sections.all.colors.background_1.label"
        },
        {
          "value": "background-2",
          "label": "t:sections.all.colors.background_2.label"
        },
        {
          "value": "inverse",
          "label": "t:sections.all.colors.inverse.label"
        }
      ],
      "default": "background-1",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info"
    },
    {
      "type": "header",
      "content": "t:sections.product-recommendations.settings.header__2.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.product-recommendations.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.product-recommendations.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.product-recommendations.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.product-recommendations.settings.image_ratio.label"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.product-recommendations.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.product-recommendations.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.product-recommendations.settings.show_rating.label",
      "info": "t:sections.product-recommendations.settings.show_rating.info"
    },
    {
      "type": "header",
      "content": "t:sections.product-recommendations.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.product-recommendations.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.product-recommendations.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.product-recommendations.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}



<style>
  .remomended-space {
    margin: 0 8px;
}
.splide__arrow--prev{
left: 20px;

}
.splide__arrow--next {
  right: 20px;
}
.splide__arrow {
 
  top:100%;
  transform: translateY(-50%);

  z-index: 1;
}
.splide__pagination {
  bottom: -11px;
}
.splide__pagination__page {
  background: #ddd;

}
.splide__pagination__page.is-active {

  background: #000;
  transform: scale(1);
  z-index: 1;
}
.product_item {
  padding: 0 5px;
}
</style>

<script>

  async function asyncCall(){
  $('.add_to_cart_form').on('submit', function(e){
    e.preventDefault();
    $.ajax({
      type: 'POST',
      url: '/cart/add.js',
      dataType: 'json',
      data: {
        quantity: 1,
        id: $(this).find('.addcart__buttonwrap').data("id")
      },
      success: function(data) {
        $('.main-card-area').addClass('active');
       
        setTimeout(() => {
            get_cart_details();
          }, 90);
      },
      error: function(data) {
        console.log("No data is found");
     }
    });
  });


  function get_cart_details() {
    fetch("/?section_id=cart-drawyer").then((response) => response.text() ).then((cartData) => {
      var cart_html = $(cartData);

 
      var cart_items = $(".product_items_subwrapper", cart_html);

      var cart_count = $(".cart-drawer__count", cart_html);
  
      var cart_subtotal = $(".cart-drawer__total-amount", cart_html);

      // var cartData2 = JSON.parse(cart_items); 

     
      if ($(".product_items_empt_subwrapper")[0]){

         $(".product_items_empt_subwrapper").empty();
         $(".product_items_empt_subwrapper").append(cart_items);
       
        $(".main-card-btn").removeClass('d-none');
        $(".empty_cart_msg").addClass('d-none');

    } else {
        $(".product_items_subwrapper").replaceWith(cart_items);
    }

      
      $('.cart-drawer__count').replaceWith(cart_count);
      $('.cart-drawer__total-amount').replaceWith(cart_subtotal);
    });
  };


}

</script>